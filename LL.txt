package New;

public class LL {

	public Node head;

	public LL() {
		super();
		head = null;
	}

	public Node getHead() {
		return head;
	}

	public boolean insert(int data) {
		Node newNode = new Node(data);
		if (newNode == null)
			
		{
			return false;
		}

		{
			if (head == null)
				
			{
				head = newNode;
				return true;

			}

			Node temp = head;

			while (temp.getNext() != null)
			
			{
				temp = temp.getNext();

			}
			temp.setNext(newNode);
			return true;
		}

	}

	public boolean insertbypossition(int data, int poss) {
		Node newNode = new Node(data);
		if (newNode == null)
			
		{
			return false;
		}
		if (poss == 1) {
			newNode.setNext(head);
			head = newNode;
			return true;
		}
		Node prev = head;
		for (int i = 1; i < poss - 1; i++)
		
		{
			prev = prev.getNext();
		}
		newNode.setNext(prev.getNext());
		prev.setNext(newNode);

		return true;

		
	}

	public void display()
	{
		Node temp = head;
		
		while (temp != null)
		{
			System.out.print(temp.getData()+ " ");
			temp = temp.getNext();
		}
		System.out.println();
	}
	
	public boolean delete(int data)
	{
	if (head.getData()== data)
	{
		head = head.getNext();
		return true;
	}
	
	Node prev = head, del = head;
	while (del.getData()!= data)
	{
		prev = del;
		del = del.getNext();
	}
	
	prev.setNext(del.getNext());
	
	return true;

	}

	
	public boolean deletebyposs (int data, int poss)
	{
	if (poss == 1)
	{
		head= head.getNext();
		return true;
	}
		Node prev = head;
		for (int i=1;i<poss-1;i++)
		{
			prev = prev.getNext();
		}
		
		Node del = prev.getNext();
		prev.setNext(del.getNext());
		
	
	return true;
	}
	
}
