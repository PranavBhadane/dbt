...make com.app.Entity-RailwyEntity-@Entity-@Table(name="")@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private long id;
	@Column(name="name",nullable=false)
	private String name;
	@Enumerated(EnumType.STRING)
	@Column(name="category")
	private Category category;
	@Column(name="start_time",nullable = false)
	private String start_time;
	@Column(name="end_time",nullable = false)
	private String end_time;
	@Column(name="Source",nullable = false)
	private String source;
	@Column(name="destintion",nullable = false)
	private String destination;
	@Column(name="station_code",nullable = false)
	private String station_code;
	@Column(name="distance",nullable = false)
	private long distance;
	@Column(name="frequency",nullable = false)
	private long frequence;

...com.app.Repository-RailwayRepo.interface, EXTEND JpaRepo<RailwayEntity,Long>
{@Query("Select p from RailwayEntity p where p.category = :category")}
...com.app.Service-RailwayService-
	public String addRailway(RailwayEntity railway);
	public String deleteById(Long Id);
	public List<RailwayEntity> getAll();
	public List<RailwayEntity> displayByCategory(Category category);
...RailwayServiceImpl-Add RailwayService- @Service @Transactional
{@Autowired
	private RailwayRepo railwayRepo;
	@Override
	public String addRailway(RailwayEntity railway) {railwayRepo.save(railway);return "Added Successfully";}
	@Override
	public String deleteById(Long Id) {railwayRepo.deleteById(Id);return "Successfully deleted!!";}
	@Override
	public List<RailwayEntity> getAll() {return railwayRepo.findAll();}
	@Override
	public List<RailwayEntity> displayByCategory(Category category) {return railwayRepo.findByCategory(category);}
...com.app.controller-RailwayController-@RestController@RequestMapping("/railway")
@Autowired private RailwayService railwayservice;
		
		@PostMapping
		public ResponseEntity<?> addRilway(@RequestBody RailwayEntity railway){
		try{return ResponseEntity.status(HttpStatus.CREATED).body(railwayservice.addRailway(railway));}
		catch(Exception e)
		{System.out.println(e);return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getMessage());}}
		@DeleteMapping("/{id}")
		public ResponseEntity<?> deleteRailway(@PathVariable @Valid Long id){
			try {return ResponseEntity.status(HttpStatus.ACCEPTED).body(railwayservice.deleteById(id));}
			catch(Exception e)
			{System.out.println(e);return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getMessage());}}
		@GetMapping
		public ResponseEntity<?> getAll(){try {return ResponseEntity.status(HttpStatus.ACCEPTED).body(railwayservice.getAll());}
			catch(Exception e) {System.out.println(e);return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getMessage());}}
@GetMapping("/{category}")public ResponseEntity<?> getByCategory(String category){try {Category ct = Category.valueOf(category.toUpperCase());
				return ResponseEntity.status(HttpStatus.ACCEPTED).body(railwayservice.displayByCategory(ct));}
			catch(Exception e)
			{return ResponseEntity.status(HttpStatus.NOT_FOUND).body(e.getMessage());}}